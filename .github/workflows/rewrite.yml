name: Build nxdumptool 'rewrite' tests

on:
  push:
    branches: [ rewrite ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    branches: [ rewrite ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: devkitpro/devkita64
      env: |
        COMMITID: $(git rev-parse --short HEAD)
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Updating repos, install dkp-toolchain-vars, and set permissions...
        run: |
          sudo apt-get update ; sudo apt-get upgrade -y patch fakeroot p7zip-full
          # Update repos and install 'patch', 'fakeroot', and 'p7zip-full'
          sudo -n dkp-pacman --noconfirm -U $GITHUB_WORKSPACE/libs/dkp-toolchain-vars/dkp-toolchain-vars-1.0.0-2-any.pkg.tar.xz
          # Install 'dkp-toolchain-vars' as required for building https://github.com/DarkMatterCore/libusbhsfs
          useradd nxdt-build
          # Create 'nxdt-build' user for building libusbhsfs
          chmod 777 -R $GITHUB_WORKSPACE
          # Let 'nxdt-build' user access repo directory and all its files for building

      - name: Double check variables to make sure everything's properly set.
        run: |
          git rev-parse --short HEAD
          echo ${{ env.COMMITID }}
          echo "$(git rev-parse --short HEAD)"
          echo commit="$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          # Set our commit ID into environment variables (for the actual build env and for Github Actions) to make stuff easier later

      - name: Building libusbhsfs - liblwext4...
        run: |
          cd $GITHUB_WORKSPACE/libs/libusbhsfs/liblwext4
          sudo -u nxdt-build -n DEVKITPRO=/opt/devkitpro DEVKITARM=/opt/devkitpro/devkitARM DEVKITPPC=/opt/devkitpro/devkitPPC dkp-makepkg
          # Set our environment variables and run 'makepkg' so we build this generated package for install, as prerequisite for app itself
          sudo dkp-pacman -U switch-lwext4*.tar.xz --noconfirm
          # Install the generated package

      - name: Building libusbhsfs - libntfs-3g...
        run: |
          cd $GITHUB_WORKSPACE/libs/libusbhsfs/libntfs-3g
          sudo -u nxdt-build -n DEVKITPRO=/opt/devkitpro DEVKITARM=/opt/devkitpro/devkitARM DEVKITPPC=/opt/devkitpro/devkitPPC dkp-makepkg
          # Set our environment variables and run 'makepkg' so we build this generated package for install, as prerequisite for app itself
          sudo dkp-pacman -U switch-libntfs-3g*.tar.xz --noconfirm
          # Install the generated package

      - name: Building nxdumptool...
        run: |
          cd $GITHUB_WORKSPACE
          ./build.sh
          COMMITID="$(git rev-parse --short HEAD)" ls nxdumptool-rewrite_poc_${{ env.COMMITID }}.7z nxdumptool-rewrite_poc_${{ env.COMMITID }}-Debug_ELFs.7z

#      - name: nxdumptool rewrite (NRO)
#      - uses: actions/upload-artifact@v2
#        with:
#          name: nxdumptool rewrite (NRO) - ${{ env.commit }}
#          path: nxdumptool-rewrite_poc_${{ env.commit }}.7z
#          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to 'warn'

#       - name: nxdumptool rewrite (Debug ELFs)
#       - uses: actions/upload-artifact@v2
#         with:
#           name: nxdumptool rewrite (Debug ELFs) - ${{ env.commit }}
#           path: nxdumptool-rewrite_poc_${{ env.commit }}-Debug_ELFs.7z
#           if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to 'warn'